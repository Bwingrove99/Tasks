library (swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
c
?C
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
library swirl
library (swirl)
swirl()
5=7
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-z-1
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+C(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z*2+1000
my_div
library(swirl)
swirl()
getwd()
ls(computer phone water table chair)
ls(computer)
ls(water)
ls(in)
ls(chair)
ls()
x<-9
ls()
dir()
?list.files.
?list.files
args()
args(list.files())
args(x)
args(list.files)
old.dir<-args(list.files)
old.dir<-getwd()
dir.create()
dir.create(testdir)
testdir<-dir.create
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
"mytest.R"
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest")
file.rename("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R") to "mytest2.R"
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3")
Recursive
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq<- seq(5, 10, length=30)
length(30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2) each = 10)
rep(c(0, 1, 2), each = 10)
`==`
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5=/7
5!=7
5 !TRUE 7
5 !FALSE 7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
INTS
ints
ints>5
which(7)
which(ints > 7)
any(ints<0)
all(ints>0)
sys.date()
Sys.Date()
mean(c(2, 4, 5))
submit()
x
mean(c(2, 4, 5, NA))
w
mean(c(2, 4, 5))
submit()
submit(x)
mean(c(2, 4, 5))
NA
mean(c(2, 4, NA))
my_mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
mad_libs(adjective = "", place = "", noun = "")
submit()
'I' %p% 'love' %p% 'R!'
submit()
'I' %p% 'love' %p% 'R!'
data(cars)
?cars
head()
head(x)
head(cars)
plot(cars)
?plot()
?plot
plot(cars)
plot(x = cars$speed, y = cars$dist)
plot(cars)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping#
| Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
pch = 2
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()#
source("http://jonsmitchell.com/code/plotFxn02b.R")#
r02b-cumulativeMilkByTime.pdf<- source("http://jonsmitchell.com/code/plotFxn02b.R")#
Extracredit#
beren4<- beren3[Naps,]#
startHour<- (beren4$start_hour)#
startMin<- (beren4$start_minute)#
stopHour<- (beren4$end_hour)#
stopMin<- (beren4$end_minute)#
startHour#
startMin#
stopHour#
stopMin#
beren4$sleepTime<- ((stopHour - startHour)*60)+(stopMin-startMin)#
beren4#
totalNap<- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap#
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)#
plot(as.numeric(names(totalNap)),totalNap, type="b",pch=16,xlab="age in days",ylab="Nap time in minutes")#
cor.test(beren4$start_hour,beren4$sleepTime)#
I found a negative correlation between the these two variables#
unique(beren3$event)
Diaper <- which(beren3$event == "bowel")
DiaperData <- beren3[Diaper,]
head(DiaperData)
as.character(DiaperData)
head(DiaperData)
unique(DiaperData$totalFeeds)
unique(DiaperData$age)
FeedDays <-unique(DiaperData$age)
totalFeed
totalFeed[as.character(FeedDays)]
NAFeedDays <- as.character(FeedDays)
na.omit(as.data.frame(x))
NAFeedDays <- x
NAFeedDays
FeedDays
as.character(FeedDays)
head(DiaperData)
totalFeed
unique(DiaperData$age)
